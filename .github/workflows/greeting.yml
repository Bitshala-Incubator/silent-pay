name: 'Greet New Contributors'

on:
  issues:
    types: [opened]
  pull_request_target:
    types: [opened]
  discussion:
    types: [created]

jobs:
  greeting:
    name: Greet New Contributors
    runs-on: ubuntu-latest
    
    permissions:
      issues: write
      pull-requests: write
      discussions: write
    
    steps:
      - name: Greet new issue creator
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const issueCreator = context.payload.issue.user.login;
            
            // Check if this is the user's first issue
            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              creator: issueCreator,
              state: 'all'
            });
            
            // Check if this is the user's first contribution
            const prs = await github.rest.pulls.list({
              owner,
              repo,
              creator: issueCreator,
              state: 'all'
            });
            
            const isFirstContribution = issues.data.length === 1 && prs.data.length === 0;
            
            if (isFirstContribution) {
              const message = `üëã Hi @${issueCreator}! 

            Thank you for opening your first issue in the **Silent Pay** project! üéâ

            We appreciate your interest in Bitcoin Silent Payments. Here are some helpful resources to get you started:

            üìö **Resources:**
            - [Contributing Guidelines](../CONTRIBUTING.md)
            - [Code of Conduct](../CODE_OF_CONDUCT.md)
            - [Development Setup](../README.md#development)
            - [Silent Payments BIP](https://github.com/bitcoin/bips/blob/master/bip-0352.mediawiki)

            üîß **Getting Help:**
            - Check our [existing issues](../issues) for similar problems
            - Review our [documentation](../README.md)
            - Join discussions in our community channels

            üí° **Tips for a great issue:**
            - Provide clear steps to reproduce (if it's a bug)
            - Include relevant code snippets or error messages
            - Describe your environment (Node.js version, OS, etc.)

            A maintainer will review your issue soon. Welcome to the community! üöÄ`;

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.payload.issue.number,
                body: message
              });
              
              // Add first-time-contributor label
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: context.payload.issue.number,
                labels: ['first-time-contributor', 'needs-triage']
              });
            }

      - name: Greet new PR creator
        if: github.event_name == 'pull_request_target'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prCreator = context.payload.pull_request.user.login;
            
            // Check if this is the user's first PR
            const prs = await github.rest.pulls.list({
              owner,
              repo,
              creator: prCreator,
              state: 'all'
            });
            
            const isFirstPR = prs.data.length === 1;
            
            if (isFirstPR) {
              const message = `üéâ Thank you for your first pull request, @${prCreator}!

            Welcome to the **Silent Pay** project! We're excited to have you contributing to Bitcoin Silent Payments.

            ## What happens next?

            1. **Automated Checks**: Your PR will go through automated tests and quality checks
            2. **Code Review**: A maintainer will review your changes
            3. **Feedback**: We might suggest some changes or ask questions
            4. **Merge**: Once approved, your contribution will be merged!

            ## Before your PR is reviewed

            Please make sure:
            - [ ] Your code follows our [style guidelines](../CONTRIBUTING.md#code-style)
            - [ ] Tests pass locally (\`npm test\`)
            - [ ] You've added tests for new features
            - [ ] Documentation is updated if needed
            - [ ] Your commits follow [conventional commit format](https://conventionalcommits.org/)

            ## Need help?

            - Check our [Contributing Guidelines](../CONTRIBUTING.md)
            - Review similar PRs for examples
            - Ask questions in the comments below

            Thank you for contributing to Bitcoin privacy technology! üîê‚ú®

            ---
            *This is an automated message for first-time contributors.*`;

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.payload.pull_request.number,
                body: message
              });
              
              // Add first-time-contributor label
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: context.payload.pull_request.number,
                labels: ['first-time-contributor', 'needs-review']
              });
            }

  setup-labels:
    name: Setup Repository Labels
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'issues' && github.event.action == 'opened')
    
    permissions:
      issues: write
    
    steps:
      - name: Create labels if they don't exist
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            
            const labels = [
              { name: 'first-time-contributor', color: '7057ff', description: 'Issues or PRs from first-time contributors' },
              { name: 'needs-triage', color: 'd93f0b', description: 'Issues that need to be triaged' },
              { name: 'needs-review', color: '0075ca', description: 'PRs that need code review' },
              { name: 'good-first-issue', color: '7057ff', description: 'Good for newcomers' },
              { name: 'help-wanted', color: '008672', description: 'Extra attention is needed' },
              { name: 'question', color: 'd876e3', description: 'Further information is requested' },
              { name: 'documentation', color: '0075ca', description: 'Improvements or additions to documentation' },
              { name: 'enhancement', color: 'a2eeef', description: 'New feature or request' },
              { name: 'bug', color: 'd73a4a', description: 'Something isn\'t working' }
            ];
            
            for (const label of labels) {
              try {
                await github.rest.issues.createLabel({
                  owner,
                  repo,
                  name: label.name,
                  color: label.color,
                  description: label.description
                });
                console.log(`Created label: ${label.name}`);
              } catch (error) {
                if (error.status === 422) {
                  console.log(`Label already exists: ${label.name}`);
                } else {
                  console.error(`Error creating label ${label.name}:`, error.message);
                }
              }
            }